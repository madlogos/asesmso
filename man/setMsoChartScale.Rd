% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/set_scale.R
\name{setMsoChartScale}
\alias{setMsoChartScale}
\title{Optimize the scale range and major unit of the axes of a msoChart object}
\usage{
setMsoChartScale(oChart, changeScale = TRUE, returnValue = FALSE, ...)
}
\arguments{
\item{oChart}{msoChart object (COMIDispatch class)}

\item{changeScale}{Logical, change the MinimumScale and MaximumScale parameters
or not. Default \code{TRUE}.}

\item{returnValue}{Logical, return optimized parameters or not. Default
\code{FALSE}.}

\item{...}{Other params.}
}
\value{
If returnValue is TRUE, then returns a list \code{list(MajorUnit,
ScaleRange)}. If FALSE, then returns nothing.
}
\description{
It is a pipelined wrapper of \code{\link{getMsoChartDims}},
\code{\link{getMsoChartSeries}} and \code{\link{getOptScaleUnit}},
\code{\link{getOptScaleRange}} to deal with the source data matrix of the
mscChart object.
By default, the function directly sets the parameters MajorUnit, MinimumScale
and MaximumScale of the msoChart, and returns nothing about the optimized scale
range or major unit.
}
\examples{
\dontrun{
ppt <- RDCOMClient::COMCreate("Powerpoint.Application")
pres <- ppt$Presentations()$Open(<some ppt file>)
slide <- pres$Slides(2)  # the 2nd slide
shape <- slide$Shapes(3)  # the 3rd shape
if (shape[['HasChart']] == -1) {  # if the shape contains msoChart
    chart <- shape[['Chart']]
    setMsoChartScale(chart)
}
}
}
\seealso{
\code{\link{getMsoChartDims}}  \code{\link{getMsoChartSeries}}
\code{\link{getOptScaleUnit}}  \code{\link{getOptScaleRange}}
}
\author{
Yiying Wang, \email{wangy@aetna.com}
}
